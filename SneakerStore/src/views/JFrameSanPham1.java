package views;

import java.awt.HeadlessException;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.time.LocalDate;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import model.ChatLieuDeGiay1;
import model.ChatLieuMatGiay1;
import model.ChiTietSanPham1;
import model.DanhMuc1;
import model.GiamGia1;
import model.MauSac1;
import model.SanPham1;
import model.Size1;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import repository.Auth;
import repository.MsgBox;
import service.impl.ChatLieuDGServiceImpl1;
import service.impl.ChatLieuMGServiceImpl1;
import service.impl.ChiTietSPServiceImpl1;
import service.impl.DanhMucServiceImpl1;
import service.impl.GiamGiaServiceImpl1;
import service.impl.MauSacServiceImpl1;
import service.impl.SanPhamServiceImpl1;
import service.impl.SizeServiceImpl1;
import utilities.ValidateHelper;
import service.ChatLieuDGService1;
import service.ChiTietSPService1;
import service.DanhMucService1;
import service.GiamGiaService1;
import service.MauSacService1;
import service.SizeService1;
import service.SanPhamService1;
import service.ChatLieuMGService1;

public class JFrameSanPham1 extends javax.swing.JFrame {

    private final SanPhamService1 sanPhamService = new SanPhamServiceImpl1();
    private final DanhMucService1 danhMucService = new DanhMucServiceImpl1();
    private final ChiTietSPService1 chiTietSPService = new ChiTietSPServiceImpl1();
    private final ChatLieuMGService1 chatLieuMGService = new ChatLieuMGServiceImpl1();
    private final ChatLieuDGService1 chatLieuDGService = new ChatLieuDGServiceImpl1();
    private final SizeService1 sizeService = new SizeServiceImpl1();
    private final MauSacService1 mauSacService = new MauSacServiceImpl1();
    private final GiamGiaService1 giamGiaService = new GiamGiaServiceImpl1();
    DefaultTableModel model = new DefaultTableModel();
    DefaultComboBoxModel<DanhMuc1> modelComboDanhMuc = new DefaultComboBoxModel<>();
    DefaultComboBoxModel<SanPham1> modelComboSanPham = new DefaultComboBoxModel<>();
    DefaultComboBoxModel<ChatLieuMatGiay1> modelComboChatLieuMG = new DefaultComboBoxModel<>();
    DefaultComboBoxModel<ChatLieuDeGiay1> modelComboChatLieuDG = new DefaultComboBoxModel<>();
    DefaultComboBoxModel<Size1> modelComboSize = new DefaultComboBoxModel<>();
    DefaultComboBoxModel<MauSac1> modelComboMauSac = new DefaultComboBoxModel<>();
    DefaultComboBoxModel<GiamGia1> modelComboGiamGia = new DefaultComboBoxModel<>();

    int index = -1;

    public JFrameSanPham1() {
        initComponents();
        setLocationRelativeTo(null);
        model = (DefaultTableModel) tblSanPham.getModel();
        loadSanPhamToTable();
        cboDanhMuc.setModel((DefaultComboBoxModel) modelComboDanhMuc);
        loadDataToComboDanhMuc();
        loadDataToComboSanPham();
        cboSanPham.setModel((DefaultComboBoxModel) modelComboSanPham);
        cboChatLieuMG.setModel((DefaultComboBoxModel) modelComboChatLieuMG);
        loadDataToComboCLMG();
        cboChatLieuDG.setModel((DefaultComboBoxModel) modelComboChatLieuDG);
        loadDataToComboCLDG();
        cboSize.setModel((DefaultComboBoxModel) modelComboSize);
        loadDataToComboSize();
        cboMauSac.setModel((DefaultComboBoxModel) modelComboMauSac);
        loadDataToComboMauSac();
        cboGiamGia.setModel((DefaultComboBoxModel) modelComboGiamGia);
        loadDataToComboGiamGia();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        jpnNavigation = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        btnSanPham = new javax.swing.JButton();
        btnHome = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jTabbedPane = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblSanPham = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtMaSP = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtTenSP = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        txtNgayCapNhat = new javax.swing.JTextField();
        txtNgayNhap = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        cboDanhMuc = new javax.swing.JComboBox<>();
        rdoConHang = new javax.swing.JRadioButton();
        rdoHetHang = new javax.swing.JRadioButton();
        jPanel11 = new javax.swing.JPanel();
        btnThem = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        btnChiTietSP = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        txtMaCTSP = new javax.swing.JTextField();
        txtSoLuong = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtDonGia = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        cboSanPham = new javax.swing.JComboBox<>();
        cboChatLieuMG = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        cboChatLieuDG = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();
        cboSize = new javax.swing.JComboBox<>();
        jLabel15 = new javax.swing.JLabel();
        cboMauSac = new javax.swing.JComboBox<>();
        jLabel16 = new javax.swing.JLabel();
        cboGiamGia = new javax.swing.JComboBox<>();
        jLabel17 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtMoTa = new javax.swing.JTextArea();
        jPanel12 = new javax.swing.JPanel();
        btnLamMoiCTSP = new javax.swing.JButton();
        btnXoaCTSP = new javax.swing.JButton();
        btnSuaCTSP = new javax.swing.JButton();
        btnThemCTSP = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblCTSP = new javax.swing.JTable();
        jPanel10 = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        btnLamMoiThuocTinh = new javax.swing.JButton();
        btnXoaThuocTinh = new javax.swing.JButton();
        btnSuaThuocTinh = new javax.swing.JButton();
        btnThemThuocTinh = new javax.swing.JButton();
        jPanel15 = new javax.swing.JPanel();
        rdoSize = new javax.swing.JRadioButton();
        rdoDanhMuc = new javax.swing.JRadioButton();
        rdoMauSac = new javax.swing.JRadioButton();
        rdoChatLieuMat = new javax.swing.JRadioButton();
        rdoChatLieuDe = new javax.swing.JRadioButton();
        jPanel16 = new javax.swing.JPanel();
        txtMaThuocTinh = new javax.swing.JTextField();
        txtTenThuocTinh = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        rdoDangKinhDoanh = new javax.swing.JRadioButton();
        rdoNgungKinhDoanh = new javax.swing.JRadioButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblThuocTinh = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jpnNavigation.setBackground(new java.awt.Color(153, 153, 255));
        jpnNavigation.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jButton1.setBackground(new java.awt.Color(255, 204, 204));
        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IconSwing/Shop.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        btnSanPham.setBackground(new java.awt.Color(204, 204, 255));
        btnSanPham.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnSanPham.setForeground(new java.awt.Color(0, 0, 255));
        btnSanPham.setText("Quản lý sản phẩm");
        btnSanPham.setBorder(new javax.swing.border.MatteBorder(null));
        btnSanPham.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSanPhamActionPerformed(evt);
            }
        });

        btnHome.setBackground(new java.awt.Color(255, 255, 153));
        btnHome.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnHome.setText("Home");
        btnHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHomeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpnNavigationLayout = new javax.swing.GroupLayout(jpnNavigation);
        jpnNavigation.setLayout(jpnNavigationLayout);
        jpnNavigationLayout.setHorizontalGroup(
            jpnNavigationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 165, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpnNavigationLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnHome)
                .addGap(45, 45, 45))
            .addGroup(jpnNavigationLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnSanPham, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jpnNavigationLayout.setVerticalGroup(
            jpnNavigationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnNavigationLayout.createSequentialGroup()
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnHome)
                .addGap(42, 42, 42))
        );

        jPanel1.setBackground(new java.awt.Color(204, 255, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel2.setText("Quản lý sản phẩm");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(413, 413, 413)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel2)
                .addContainerGap(27, Short.MAX_VALUE))
        );

        jTabbedPane.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jTabbedPaneStateChanged(evt);
            }
        });
        jTabbedPane.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPaneMouseClicked(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(255, 255, 204));

        tblSanPham.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã Sản Phẩm", "Tên Sản Phẩm", "Ngày Nhập", "Ngày Cập Nhật", "Trạng Thái", "Danh Mục"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblSanPham.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSanPhamMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblSanPham);

        jPanel4.setBackground(new java.awt.Color(255, 255, 204));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông Tin Sản Phẩm", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14))); // NOI18N

        jLabel1.setText("Mã Sản Phẩm");

        txtMaSP.setEditable(false);

        jLabel3.setText("Tên Sản Phẩm");

        jLabel4.setText("Trạng Thái");

        jPanel5.setBackground(new java.awt.Color(255, 255, 204));

        jPanel2.setBackground(new java.awt.Color(255, 255, 204));

        txtNgayCapNhat.setEditable(false);

        txtNgayNhap.setEditable(false);

        jLabel5.setText("Ngày Nhập");

        jLabel6.setText("Ngày Cập Nhật");

        jLabel7.setText("Danh Mục");

        cboDanhMuc.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboDanhMuc.setMinimumSize(new java.awt.Dimension(150, 26));
        cboDanhMuc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboDanhMucActionPerformed(evt);
            }
        });

        buttonGroup1.add(rdoConHang);
        rdoConHang.setSelected(true);
        rdoConHang.setText("Còn Hàng");

        buttonGroup1.add(rdoHetHang);
        rdoHetHang.setText("Hết Hàng");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(550, 550, 550))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel1)
                            .addComponent(jLabel6))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtMaSP, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNgayNhap, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNgayCapNhat, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel7)
                                .addComponent(jLabel4)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtTenSP, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(cboDanhMuc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(rdoConHang))
                                .addGap(18, 18, 18)
                                .addComponent(rdoHetHang)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(88, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(252, 252, 252))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3)
                                    .addComponent(txtTenSP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(34, 34, 34)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(rdoConHang)
                                    .addComponent(rdoHetHang)
                                    .addComponent(jLabel4)))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1)
                                    .addComponent(txtMaSP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(29, 29, 29)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtNgayNhap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5))))
                        .addGap(28, 28, 28)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtNgayCapNhat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)
                            .addComponent(cboDanhMuc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel11.setBackground(new java.awt.Color(255, 255, 204));
        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Chức Năng", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14))); // NOI18N

        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnClear.setText("Làm Mới");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        btnChiTietSP.setText("Chi Tiết Sản Phẩm");
        btnChiTietSP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChiTietSPActionPerformed(evt);
            }
        });

        jButton2.setText("In DS");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnThem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(40, 40, 40)
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnClear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnXoa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGap(86, 86, 86)
                        .addComponent(btnChiTietSP))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGap(105, 105, 105)
                        .addComponent(jButton2)))
                .addContainerGap(42, Short.MAX_VALUE))
        );

        jPanel11Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnClear, btnSua, btnThem, btnXoa});

        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(btnXoa)
                        .addGap(18, 18, 18)
                        .addComponent(btnClear)))
                .addGap(18, 18, 18)
                .addComponent(btnChiTietSP, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addContainerGap())
        );

        jPanel11Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnClear, btnSua, btnThem, btnXoa});

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 226, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane.addTab("Sản Phẩm", jPanel3);

        jPanel6.setBackground(new java.awt.Color(255, 255, 204));

        jPanel7.setBackground(new java.awt.Color(255, 255, 204));
        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông Tin Sản Phẩm", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14))); // NOI18N

        jLabel9.setText("Mã CTSP");

        txtMaCTSP.setEditable(false);

        txtSoLuong.setToolTipText("");
        txtSoLuong.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        jLabel10.setText("Số lượng");

        jLabel11.setText("Sản phẩm");

        jLabel12.setText("Đơn giá");

        cboSanPham.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboSanPham.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboSanPhamActionPerformed(evt);
            }
        });

        cboChatLieuMG.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel13.setText("Chất liệu mặt giày");

        cboChatLieuDG.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel14.setText("Chất liệu đế giày");

        cboSize.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel15.setText("Size");

        cboMauSac.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel16.setText("Màu sắc");

        cboGiamGia.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Không có" }));

        jLabel17.setText("Mã giảm giá");

        jLabel19.setText("Mô tả");

        txtMoTa.setColumns(20);
        txtMoTa.setRows(5);
        jScrollPane3.setViewportView(txtMoTa);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel7Layout.createSequentialGroup()
                            .addGap(31, 31, 31)
                            .addComponent(jLabel17)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(cboGiamGia, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(jPanel7Layout.createSequentialGroup()
                            .addGap(44, 44, 44)
                            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel10)
                                .addComponent(jLabel12)
                                .addComponent(jLabel9))
                            .addGap(18, 18, 18)
                            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtMaCTSP, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtSoLuong)
                                .addComponent(txtDonGia, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addComponent(jLabel19)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 71, Short.MAX_VALUE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addGap(18, 18, 18)
                        .addComponent(cboSanPham, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel13)
                            .addComponent(jLabel14)
                            .addComponent(jLabel15)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel7Layout.createSequentialGroup()
                                .addGap(53, 53, 53)
                                .addComponent(jLabel16)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(cboMauSac, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cboSize, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cboChatLieuDG, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cboChatLieuMG, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(44, 44, 44))
        );

        jPanel7Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cboSanPham, txtDonGia, txtMaCTSP, txtSoLuong});

        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(txtMaCTSP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(txtSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(txtDonGia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cboGiamGia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel17))
                        .addGap(7, 7, 7)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel19)))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(cboSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(cboChatLieuMG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(cboChatLieuDG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(cboSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(cboMauSac, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16))))
                .addContainerGap(37, Short.MAX_VALUE))
        );

        jPanel12.setBackground(new java.awt.Color(255, 255, 204));
        jPanel12.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Chức Năng", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14))); // NOI18N

        btnLamMoiCTSP.setText("Làm mới");
        btnLamMoiCTSP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLamMoiCTSPActionPerformed(evt);
            }
        });

        btnXoaCTSP.setText("Xóa");
        btnXoaCTSP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaCTSPActionPerformed(evt);
            }
        });

        btnSuaCTSP.setText("Sửa");
        btnSuaCTSP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaCTSPActionPerformed(evt);
            }
        });

        btnThemCTSP.setText("Thêm");
        btnThemCTSP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemCTSPActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnThemCTSP, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSuaCTSP, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnXoaCTSP, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLamMoiCTSP, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(btnThemCTSP, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnSuaCTSP, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnXoaCTSP, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnLamMoiCTSP, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        tblCTSP.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã CTSP", "Số lượng", "Đơn giá ", "Sản phẩm", "Chất liệu đế giày", "Size", "Màu sắc", "Chất liệu mặt giày", "Mô tả", "Mã giảm giá"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblCTSP.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblCTSPMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                tblCTSPMouseEntered(evt);
            }
        });
        jScrollPane4.setViewportView(tblCTSP);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(84, 84, 84)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(78, 78, 78)
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(80, Short.MAX_VALUE))
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 195, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane.addTab("Chi Tiết Sản Phẩm", jPanel6);

        jPanel10.setBackground(new java.awt.Color(255, 255, 204));
        jPanel10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel10MouseClicked(evt);
            }
        });

        jPanel14.setBackground(new java.awt.Color(255, 255, 204));
        jPanel14.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Chức Năng", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14))); // NOI18N

        btnLamMoiThuocTinh.setText("Làm Mới");
        btnLamMoiThuocTinh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLamMoiThuocTinhActionPerformed(evt);
            }
        });

        btnXoaThuocTinh.setText("Xóa");
        btnXoaThuocTinh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaThuocTinhActionPerformed(evt);
            }
        });

        btnSuaThuocTinh.setText("Sửa");
        btnSuaThuocTinh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaThuocTinhActionPerformed(evt);
            }
        });

        btnThemThuocTinh.setText("Thêm");
        btnThemThuocTinh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemThuocTinhActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel14Layout.createSequentialGroup()
                .addContainerGap(35, Short.MAX_VALUE)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnLamMoiThuocTinh)
                    .addComponent(btnSuaThuocTinh)
                    .addComponent(btnThemThuocTinh, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnXoaThuocTinh))
                .addGap(31, 31, 31))
        );

        jPanel14Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnLamMoiThuocTinh, btnSuaThuocTinh, btnThemThuocTinh, btnXoaThuocTinh});

        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel14Layout.createSequentialGroup()
                .addContainerGap(24, Short.MAX_VALUE)
                .addComponent(btnThemThuocTinh, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnSuaThuocTinh)
                .addGap(18, 18, 18)
                .addComponent(btnXoaThuocTinh)
                .addGap(18, 18, 18)
                .addComponent(btnLamMoiThuocTinh)
                .addGap(22, 22, 22))
        );

        jPanel14Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnLamMoiThuocTinh, btnSuaThuocTinh, btnThemThuocTinh, btnXoaThuocTinh});

        jPanel15.setBackground(new java.awt.Color(255, 255, 204));
        jPanel15.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thuộc Tính Sản Phẩm", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14))); // NOI18N

        buttonGroup2.add(rdoSize);
        rdoSize.setText("Size");
        rdoSize.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                rdoSizeStateChanged(evt);
            }
        });

        buttonGroup2.add(rdoDanhMuc);
        rdoDanhMuc.setText("Danh mục");
        rdoDanhMuc.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                rdoDanhMucStateChanged(evt);
            }
        });

        buttonGroup2.add(rdoMauSac);
        rdoMauSac.setText("Màu sắc");
        rdoMauSac.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                rdoMauSacStateChanged(evt);
            }
        });

        buttonGroup2.add(rdoChatLieuMat);
        rdoChatLieuMat.setText("Chất liệu mặt giày");
        rdoChatLieuMat.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                rdoChatLieuMatStateChanged(evt);
            }
        });

        buttonGroup2.add(rdoChatLieuDe);
        rdoChatLieuDe.setSelected(true);
        rdoChatLieuDe.setText("Chất liệu đế giày");
        rdoChatLieuDe.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                rdoChatLieuDeStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(rdoChatLieuDe)
                .addGap(39, 39, 39)
                .addComponent(rdoChatLieuMat)
                .addGap(42, 42, 42)
                .addComponent(rdoMauSac)
                .addGap(48, 48, 48)
                .addComponent(rdoDanhMuc)
                .addGap(31, 31, 31)
                .addComponent(rdoSize)
                .addContainerGap(34, Short.MAX_VALUE))
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rdoChatLieuMat)
                    .addComponent(rdoMauSac)
                    .addComponent(rdoDanhMuc)
                    .addComponent(rdoSize)
                    .addComponent(rdoChatLieuDe))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        jPanel16.setBackground(new java.awt.Color(255, 255, 204));
        jPanel16.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Chi Tiết Thuộc Tính", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14))); // NOI18N

        txtMaThuocTinh.setEditable(false);

        jLabel18.setText("Mã thuộc tính");

        jLabel20.setText("Tên thuộc tính");

        jLabel21.setText("Trạn thái");

        buttonGroup3.add(rdoDangKinhDoanh);
        rdoDangKinhDoanh.setSelected(true);
        rdoDangKinhDoanh.setText("Đang Kinh Doanh");

        buttonGroup3.add(rdoNgungKinhDoanh);
        rdoNgungKinhDoanh.setText("Ngừng Kinh Doanh");

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel18)
                    .addGroup(jPanel16Layout.createSequentialGroup()
                        .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel20)
                            .addComponent(jLabel21))
                        .addGap(24, 24, 24)
                        .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel16Layout.createSequentialGroup()
                                .addComponent(rdoDangKinhDoanh)
                                .addGap(18, 18, 18)
                                .addComponent(rdoNgungKinhDoanh))
                            .addComponent(txtTenThuocTinh, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtMaThuocTinh, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(56, Short.MAX_VALUE))
        );

        jPanel16Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txtMaThuocTinh, txtTenThuocTinh});

        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(txtMaThuocTinh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(txtTenThuocTinh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(rdoDangKinhDoanh)
                    .addComponent(rdoNgungKinhDoanh))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        tblThuocTinh.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã thuộc tính", "Tên thuộc tính", "Trạng thái"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblThuocTinh.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblThuocTinhMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblThuocTinh);

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 427, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(149, Short.MAX_VALUE))
        );

        jTabbedPane.addTab("Thuộc Tính Sản Phẩm", jPanel10);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jpnNavigation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 1129, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpnNavigation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHomeActionPerformed
        setVisible(false);
        new JFrameMain().setVisible(true);
    }//GEN-LAST:event_btnHomeActionPerformed

    private void btnSanPhamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSanPhamActionPerformed
        setVisible(false);
        new JFrameSanPham1().setVisible(true);
    }//GEN-LAST:event_btnSanPhamActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here:
        clearForm();
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
        int admin = Auth.isManager();
        if (admin == 0) {
            try {
                if (ValidateHelper.checkRowCount(tblSanPham.getRowCount(), "Hết dữ liệu để xóa")) {
                    return;
                }
                if (ValidateHelper.CheckSelectedRow(index, "Vui lòng chọn dòng muốn xóa")) {
                    return;
                }
                if (ValidateHelper.confirmDelete(JOptionPane.showConfirmDialog(this, "Bạn có muốn xóa sản phẩm này ?"))) {
                    return;
                }
                Integer MaSP = Integer.parseInt(txtMaSP.getText());
                if (sanPhamService.deleteSanPham(MaSP) != null) {
                    JOptionPane.showMessageDialog(this, "Xóa thành công");
                }
                loadSanPhamToTable();
                clearForm();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Lỗi Xóa");
            }
        } else {
            MsgBox.alert(this, "Bạn không phải Quản trị viên");
        }

    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        // TODO add your handling code here:
        int admin = Auth.isManager();
        if (admin == 0) {

            try {
                if (ValidateHelper.CheckSelectedRow(index, "Chọn 1 dòng để sửa")) {
                    return;
                }
                if (ValidateHelper.CheckNull(txtTenSP, "Vui lòng nhập tên sản phẩm !")) {
                    return;
                }
//            if (ValidateHelper.checkTrungTen(txtTenSP, "Sản phẩm này đã tồn tại")) {
//                return;
//            }
                SanPham1 sanPham = getSanPhamFromInput();
                if (sanPhamService.updateSanPham(sanPham) != null) {
                    JOptionPane.showMessageDialog(this, "Sửa thành công");
                } else {
                    JOptionPane.showMessageDialog(this, "Sửa thất bại");
                }
                loadSanPhamToTable();
                clearForm();
            } catch (HeadlessException headlessException) {
                JOptionPane.showMessageDialog(this, "Lỗi sửa");
            }
        } else {
            MsgBox.alert(this, "Bạn không phải Quản trị viên");
        }

    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:
        int admin = Auth.isManager();
        if (admin == 0) {
            try {
                if (index != -1) {
                    clearForm();
                }
                if (ValidateHelper.CheckNull(txtTenSP, "Vui lòng nhập tên sản phẩm !")) {
                    return;
                }
//            if (ValidateHelper.checkTrungTen(txtTenSP, "Sản phẩm này đã tồn tại")) {
//                return;
//            }
                SanPham1 sanPham = sanPhamAddNew();
                if (sanPhamService.addSanPham(sanPham) != null) {
                    JOptionPane.showMessageDialog(this, "Thêm thành công");
                } else {
                    JOptionPane.showMessageDialog(this, "Thêm thất bại");
                }
                loadSanPhamToTable();
                clearForm();
            } catch (HeadlessException headlessException) {
                JOptionPane.showMessageDialog(this, "Lỗi thêm");
            }
        } else {
            MsgBox.alert(this, "Bạn không phải Quản trị viên");
        }


    }//GEN-LAST:event_btnThemActionPerformed

    private void tblSanPhamMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSanPhamMouseClicked
        // TODO add your handling code here:
        try {
            index = tblSanPham.getSelectedRow();
            showDetail();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi click table");
            System.out.println(e);
        }
    }//GEN-LAST:event_tblSanPhamMouseClicked

    private void cboDanhMucActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboDanhMucActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboDanhMucActionPerformed

    private void btnThemCTSPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemCTSPActionPerformed
        // TODO add your handling code here:
        int admin = Auth.isManager();
        if (admin == 0) {
            try {
                if (index != -1) {
                    clearFormCTSP();
                }
                if (ValidateHelper.CheckNull(txtSoLuong, "Vui lòng nhập số lượng !")) {
                    return;
                }
                if (ValidateHelper.checkIsInteger(txtSoLuong, "Vui lòng nhập số lượng bằng số nguyên !")) {
                    return;
                }
                if (ValidateHelper.CheckNull(txtDonGia, "Vui lòng nhập đơn giá !")) {
                    return;
                }
                if (ValidateHelper.checkIsFloat(txtDonGia, "Vui lòng nhập đơn giá bằng số")) {
                    return;
                }
                ChiTietSanPham1 ctspMaGGNull = ChiTietSPAddNewMaGGNull();
                if (cboGiamGia.getSelectedIndex() == 0) {
                    if (chiTietSPService.addCTSPMaGGNull(ctspMaGGNull) != null) {
                        JOptionPane.showMessageDialog(this, "Thêm thành công");
                        loadCTSPToTable();
                        clearFormCTSP();
                        return;
                    } else {
                        JOptionPane.showMessageDialog(this, "Thêm thất bại");
                    }
                }
                ChiTietSanPham1 chiTietSanPham = ChiTietSPAddNew();

                if (chiTietSPService.addCTSP(chiTietSanPham) != null) {
                    JOptionPane.showMessageDialog(this, "Thêm thành công");
                    loadCTSPToTable();
                    clearFormCTSP();
                    return;
                } else {
                    JOptionPane.showMessageDialog(this, "Thêm thất bại");
                }
            } catch (HeadlessException headlessException) {
                JOptionPane.showMessageDialog(this, "Lỗi thêm");
            }
        } else {
            MsgBox.alert(this, "Bạn không phải Quản trị viên");
        }
    }//GEN-LAST:event_btnThemCTSPActionPerformed

    private void tblCTSPMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblCTSPMouseClicked
        // TODO add your handling code here:
        try {
            index = tblCTSP.getSelectedRow();
            showDetailCTSP();
        } catch (Exception e) {
            //
        }

    }//GEN-LAST:event_tblCTSPMouseClicked

    private void btnLamMoiCTSPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLamMoiCTSPActionPerformed
        // TODO add your handling code here:
        clearFormCTSP();
    }//GEN-LAST:event_btnLamMoiCTSPActionPerformed

    private void btnSuaCTSPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaCTSPActionPerformed
        // TODO add your handling code here:
        int admin = Auth.isManager();
        if (admin == 0) {
            try {
                if (ValidateHelper.CheckSelectedRow(index, "Chọn 1 dòng để sửa")) {
                    return;
                }
                if (ValidateHelper.CheckNull(txtSoLuong, "Vui lòng nhập số lượng !")) {
                    return;
                }
                if (ValidateHelper.checkIsInteger(txtSoLuong, "Vui lòng nhập số lượng bằng số nguyên !")) {
                    return;
                }
                if (ValidateHelper.CheckNull(txtDonGia, "Vui lòng nhập đơn giá !")) {
                    return;
                }
                if (ValidateHelper.checkIsFloat(txtDonGia, "Vui lòng nhập đơn giá bằng số")) {
                    return;
                }
                //            if(ValidateHelper.checkTrungTen(txtTenSP, "Sản phẩm này đã tồn tại")){
                //                return;
                //            }

                ChiTietSanPham1 ctspMaGGNull = ChiTietSPUpdateMaGGNull();
                if (cboGiamGia.getSelectedIndex() == -1) {
                    if (chiTietSPService.updateCTSPMaGGNull(ctspMaGGNull) != null) {
                        JOptionPane.showMessageDialog(this, "Sửa thành công");
                        loadCTSPToTable();
                        clearFormCTSP();
                        return;
                    } else {
                        JOptionPane.showMessageDialog(this, "Sửa thất bại");
                    }
                }

                ChiTietSanPham1 ctsp = CTSPUpdate();
                if (chiTietSPService.updateCTSP(ctsp) != null) {
                    JOptionPane.showMessageDialog(this, "Sửa thành công");
                    loadCTSPToTable();
                    clearFormCTSP();
                    return;
                } else {
                    JOptionPane.showMessageDialog(this, "Sửa thất bại");
                }
            } catch (HeadlessException headlessException) {
                JOptionPane.showMessageDialog(this, "Lỗi sửa");
            }
        } else {
            MsgBox.alert(this, "Bạn không phải Quản trị viên");
        }
    }//GEN-LAST:event_btnSuaCTSPActionPerformed

    private void jTabbedPaneMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPaneMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jTabbedPaneMouseClicked

    private void jTabbedPaneStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jTabbedPaneStateChanged
        // TODO add your handling code here:
        jTabbedPane.addChangeListener(new ChangeListener() {
            @Override
            public void stateChanged(ChangeEvent e) {
                int selectedIndex = jTabbedPane.getSelectedIndex();
                if (selectedIndex == 0) {
                    model = (DefaultTableModel) tblSanPham.getModel();
                    loadSanPhamToTable();
                    loadDataToComboDanhMuc();
                }
                if (selectedIndex == 1) {
                    model = (DefaultTableModel) tblCTSP.getModel();
                    loadCTSPToTable();
                    loadDataToComboSanPham();
                    loadDataToComboCLDG();
                    loadDataToComboCLMG();
                    loadDataToComboSize();
                    loadDataToComboMauSac();
                    loadDataToComboGiamGia();
                }
                if (selectedIndex == 2) {
                    rdoChatLieuDe.setSelected(true);
                    model = (DefaultTableModel) tblThuocTinh.getModel();
                    loadChatLieuDeToTable();
                }
            }

        });
    }//GEN-LAST:event_jTabbedPaneStateChanged

    private void btnXoaCTSPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaCTSPActionPerformed
        // TODO add your handling code here:
        int admin = Auth.isManager();
        if (admin == 0) {
            try {
                if (ValidateHelper.checkRowCount(tblCTSP.getRowCount(), "Hết dữ liệu để xóa")) {
                    return;
                }
                if (ValidateHelper.CheckSelectedRow(index, "Vui lòng chọn dòng muốn xóa")) {
                    return;
                }
                if (ValidateHelper.confirmDelete(JOptionPane.showConfirmDialog(this, "Bạn có muốn xóa sản phẩm này ?"))) {
                    return;
                }
                Integer MaCTSP = Integer.parseInt(txtMaCTSP.getText());
                if (chiTietSPService.deleteCTSP(MaCTSP) != null) {
                    JOptionPane.showMessageDialog(this, "Xóa thành công");
                }
                loadCTSPToTable();
                clearFormCTSP();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Lỗi Xóa");
            }
        } else {
            MsgBox.alert(this, "Bạn không phải Quản trị viên");
        }
    }//GEN-LAST:event_btnXoaCTSPActionPerformed

    private void btnChiTietSPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChiTietSPActionPerformed
        // TODO add your handling code here:
        if (index == -1) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn sản phẩm");
            return;
        }
        jTabbedPane.setSelectedIndex(1);
        loadCtspByMaSP();
//        SanPham1 sp = (SanPham1) tblSanPham.getValueAt(index, 1);
//        modelComboSanPham.setSelectedItem(sp);
//        modelComboSanPham.setSelectedItem(tblSanPham.getValueAt(index, 0));
    }//GEN-LAST:event_btnChiTietSPActionPerformed

    private void cboSanPhamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboSanPhamActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboSanPhamActionPerformed

    private void jPanel10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel10MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel10MouseClicked

    private void rdoChatLieuMatStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_rdoChatLieuMatStateChanged
        // TODO add your handling code here:
        rdoChatLieuMat.addItemListener(new ItemListener() {
            @Override
            public void itemStateChanged(ItemEvent e) {
                if (e.getStateChange() == ItemEvent.SELECTED) {
                    model = (DefaultTableModel) tblThuocTinh.getModel();
                    loadChatLieuMatToTable();
                    clearFormTTSP();
                }
            }
        });
    }//GEN-LAST:event_rdoChatLieuMatStateChanged

    private void rdoChatLieuDeStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_rdoChatLieuDeStateChanged
        // TODO add your handling code here:
        rdoChatLieuDe.addItemListener(new ItemListener() {
            @Override
            public void itemStateChanged(ItemEvent e) {
                if (e.getStateChange() == ItemEvent.SELECTED) {
                    model = (DefaultTableModel) tblThuocTinh.getModel();
                    loadChatLieuDeToTable();
                    clearFormTTSP();
                }
            }
        });
    }//GEN-LAST:event_rdoChatLieuDeStateChanged

    private void tblThuocTinhMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblThuocTinhMouseClicked
        // TODO add your handling code here:
        try {
            index = tblThuocTinh.getSelectedRow();
            showDetailThuocTinh();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi Click Table");
        }
    }//GEN-LAST:event_tblThuocTinhMouseClicked

    private void btnLamMoiThuocTinhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLamMoiThuocTinhActionPerformed
        // TODO add your handling code here:
        clearFormTTSP();
    }//GEN-LAST:event_btnLamMoiThuocTinhActionPerformed

    private void btnXoaThuocTinhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaThuocTinhActionPerformed
        // TODO add your handling code here:
        int admin = Auth.isManager();
        if (admin == 0) {
            try {
                String mss = "Xóa thành công";
                if (ValidateHelper.checkRowCount(tblThuocTinh.getRowCount(), "Hết dữ liệu để xóa")) {
                    return;
                }
                if (ValidateHelper.CheckSelectedRow(index, "Vui lòng chọn dòng muốn xóa")) {
                    return;
                }
                if (ValidateHelper.confirmDelete(JOptionPane.showConfirmDialog(this, "Bạn có muốn xóa thuộc tính này ?"))) {
                    return;
                }
                Integer MaCL = Integer.parseInt(txtMaThuocTinh.getText());
                if (rdoChatLieuMat.isSelected() && chatLieuMGService.deleteChatLieu(MaCL) != null) {
                    JOptionPane.showMessageDialog(this, mss);
                    loadChatLieuMatToTable();
                }
                Integer MaCLDe = Integer.parseInt(txtMaThuocTinh.getText());
                if (rdoChatLieuDe.isSelected() && chatLieuDGService.deleteChatLieuDG(MaCLDe) != null) {
                    JOptionPane.showMessageDialog(this, mss);
                    loadChatLieuDeToTable();
                }
                Integer MaDM = Integer.parseInt(txtMaThuocTinh.getText());
                if (rdoDanhMuc.isSelected() && danhMucService.deleteDanhMuc(MaDM) != null) {
                    JOptionPane.showMessageDialog(this, mss);
                    loadDanhMucToTable();
                }
                Integer MaMS = Integer.parseInt(txtMaThuocTinh.getText());
                if (rdoMauSac.isSelected() && mauSacService.deleteMauSac(MaMS) != null) {
                    JOptionPane.showMessageDialog(this, mss);
                    loadMauSacToTable();
                }
                Integer MaSize = Integer.parseInt(txtMaThuocTinh.getText());
                if (rdoSize.isSelected() && sizeService.deleteSize(MaSize) != null) {
                    JOptionPane.showMessageDialog(this, mss);
                    loadSizeToTable();
                }
                clearFormTTSP();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Lỗi Xóa");
            }
        } else {
            MsgBox.alert(this, "Bạn không phải Quản trị viên");
        }
    }//GEN-LAST:event_btnXoaThuocTinhActionPerformed

    private void btnSuaThuocTinhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaThuocTinhActionPerformed
        // TODO add your handling code here:
        int admin = Auth.isManager();
        if (admin == 0) {
            try {
                String mss = "Sửa thành công";
                if (ValidateHelper.CheckSelectedRow(index, "Chọn 1 dòng để sửa")) {
                    return;
                }
                if (ValidateHelper.CheckNull(txtTenThuocTinh, "Vui lòng nhập tên thuộc tính !")) {
                    return;
                }
                ChatLieuMatGiay1 clmg = clmgUpdate();
                if (rdoChatLieuMat.isSelected() && chatLieuMGService.updateChatLieu(clmg) != null) {
                    JOptionPane.showMessageDialog(this, mss);
                    loadChatLieuMatToTable();
                }
                ChatLieuDeGiay1 cldg = cldgUpdate();
                if (rdoChatLieuDe.isSelected() && chatLieuDGService.updateChatLieuDG(cldg) != null) {
                    JOptionPane.showMessageDialog(this, mss);
                    loadChatLieuDeToTable();
                }
                DanhMuc1 dm = danhMucUpdate();
                if (rdoDanhMuc.isSelected() && danhMucService.updateDanhMuc(dm) != null) {
                    JOptionPane.showMessageDialog(this, mss);
                    loadDanhMucToTable();
                }
                MauSac1 ms = mauSacUpdate();
                if (rdoMauSac.isSelected() && mauSacService.updateMauSac(ms) != null) {
                    JOptionPane.showMessageDialog(this, mss);
                    loadMauSacToTable();
                }
                if (rdoSize.isSelected()) {
                    if (ValidateHelper.checkIsInteger(txtTenThuocTinh, "Vui lòng nhập Size là số !")) {
                        return;
                    }
                    if (ValidateHelper.checkSize(txtTenThuocTinh, "Vui lòng nhập Size trong khoảng 36 - 46")) {
                        return;
                    }
                    Size1 size = sizeUpdate();
                    if (sizeService.updateSize(size) != null) {
                        JOptionPane.showMessageDialog(this, mss);
                        loadSizeToTable();
                    }
                }

                clearFormTTSP();
            } catch (HeadlessException headlessException) {
                JOptionPane.showMessageDialog(this, "Lỗi sửa");
            }
        } else {
            MsgBox.alert(this, "Bạn không phải Quản trị viên");
        }
    }//GEN-LAST:event_btnSuaThuocTinhActionPerformed

    private void btnThemThuocTinhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemThuocTinhActionPerformed
        // TODO add your handling code here:
        int admin = Auth.isManager();
        if (admin == 0) {
            try {
                String mss = "Thêm thành công";
                if (index != -1) {
                    clearFormTTSP();
                }
                if (ValidateHelper.CheckNull(txtTenThuocTinh, "Vui lòng nhập tên thuộc tính !")) {
                    return;
                }
                ChatLieuMatGiay1 clmg = clmgAddNew();
                if (rdoChatLieuMat.isSelected() && chatLieuMGService.addChatLieuMG(clmg) != null) {
                    JOptionPane.showMessageDialog(this, mss);
                    loadChatLieuMatToTable();
                }
                ChatLieuDeGiay1 cldg = cldgAddNew();
                if (rdoChatLieuDe.isSelected() && chatLieuDGService.addChatLieuDG(cldg) != null) {
                    JOptionPane.showMessageDialog(this, mss);
                    loadChatLieuDeToTable();
                }
                DanhMuc1 dm = danhMucAddNew();
                if (rdoDanhMuc.isSelected() && danhMucService.addDanhMuc(dm) != null) {
                    JOptionPane.showMessageDialog(this, mss);
                    loadDanhMucToTable();
                }
                MauSac1 ms = mauSacAddNew();
                if (rdoMauSac.isSelected() && mauSacService.addMauSac(ms) != null) {
                    JOptionPane.showMessageDialog(this, mss);
                    loadMauSacToTable();
                }
                if (rdoSize.isSelected()) {
                    if (ValidateHelper.checkIsInteger(txtTenThuocTinh, "Vui lòng nhập Size là số !")) {
                        return;
                    }
                    if (ValidateHelper.checkSize(txtTenThuocTinh, "Vui lòng nhập Size trong khoảng 36 - 46")) {
                        return;
                    }
                    Size1 size = sizeAddNew();
                    if (sizeService.addSize(size) != null) {
                        JOptionPane.showMessageDialog(this, mss);
                        loadSizeToTable();
                    }
                }

                clearFormTTSP();
            } catch (HeadlessException headlessException) {
                JOptionPane.showMessageDialog(this, "Lỗi thêm");
            }
        } else {
            MsgBox.alert(this, "Bạn không phải Quản trị viên");
        }
    }//GEN-LAST:event_btnThemThuocTinhActionPerformed

    private void rdoSizeStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_rdoSizeStateChanged
        // TODO add your handling code here:
        rdoSize.addItemListener(new ItemListener() {
            @Override
            public void itemStateChanged(ItemEvent e) {
                if (e.getStateChange() == ItemEvent.SELECTED) {
                    model = (DefaultTableModel) tblThuocTinh.getModel();
                    loadSizeToTable();
                    clearFormTTSP();
                }
            }
        });
    }//GEN-LAST:event_rdoSizeStateChanged

    private void rdoMauSacStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_rdoMauSacStateChanged
        // TODO add your handling code here:
        rdoMauSac.addItemListener(new ItemListener() {
            @Override
            public void itemStateChanged(ItemEvent e) {
                if (e.getStateChange() == ItemEvent.SELECTED) {
                    model = (DefaultTableModel) tblThuocTinh.getModel();
                    loadMauSacToTable();
                    clearFormTTSP();
                }
            }
        });
    }//GEN-LAST:event_rdoMauSacStateChanged

    private void rdoDanhMucStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_rdoDanhMucStateChanged
        // TODO add your handling code here:
        rdoDanhMuc.addItemListener(new ItemListener() {
            @Override
            public void itemStateChanged(ItemEvent e) {
                if (e.getStateChange() == ItemEvent.SELECTED) {
                    model = (DefaultTableModel) tblThuocTinh.getModel();
                    loadDanhMucToTable();
                    clearFormTTSP();
                }
            }
        });
    }//GEN-LAST:event_rdoDanhMucStateChanged

    private void tblCTSPMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblCTSPMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_tblCTSPMouseEntered

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
xuatFile();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFrameSanPham1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFrameSanPham1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFrameSanPham1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrameSanPham1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFrameSanPham1().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnChiTietSP;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnHome;
    private javax.swing.JButton btnLamMoiCTSP;
    private javax.swing.JButton btnLamMoiThuocTinh;
    private javax.swing.JButton btnSanPham;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnSuaCTSP;
    private javax.swing.JButton btnSuaThuocTinh;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnThemCTSP;
    private javax.swing.JButton btnThemThuocTinh;
    private javax.swing.JButton btnXoa;
    private javax.swing.JButton btnXoaCTSP;
    private javax.swing.JButton btnXoaThuocTinh;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.JComboBox<String> cboChatLieuDG;
    private javax.swing.JComboBox<String> cboChatLieuMG;
    private javax.swing.JComboBox<String> cboDanhMuc;
    private javax.swing.JComboBox<String> cboGiamGia;
    private javax.swing.JComboBox<String> cboMauSac;
    private javax.swing.JComboBox<String> cboSanPham;
    private javax.swing.JComboBox<String> cboSize;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane;
    private javax.swing.JPanel jpnNavigation;
    private javax.swing.JRadioButton rdoChatLieuDe;
    private javax.swing.JRadioButton rdoChatLieuMat;
    private javax.swing.JRadioButton rdoConHang;
    private javax.swing.JRadioButton rdoDangKinhDoanh;
    private javax.swing.JRadioButton rdoDanhMuc;
    private javax.swing.JRadioButton rdoHetHang;
    private javax.swing.JRadioButton rdoMauSac;
    private javax.swing.JRadioButton rdoNgungKinhDoanh;
    private javax.swing.JRadioButton rdoSize;
    private javax.swing.JTable tblCTSP;
    private javax.swing.JTable tblSanPham;
    private javax.swing.JTable tblThuocTinh;
    private javax.swing.JTextField txtDonGia;
    private javax.swing.JTextField txtMaCTSP;
    private javax.swing.JTextField txtMaSP;
    private javax.swing.JTextField txtMaThuocTinh;
    private javax.swing.JTextArea txtMoTa;
    private javax.swing.JTextField txtNgayCapNhat;
    private javax.swing.JTextField txtNgayNhap;
    private javax.swing.JTextField txtSoLuong;
    private javax.swing.JTextField txtTenSP;
    private javax.swing.JTextField txtTenThuocTinh;
    // End of variables declaration//GEN-END:variables

    private void loadSanPhamToTable() {
        model.setRowCount(0);
        ArrayList<SanPham1> listSanPham = sanPhamService.getAllSanPham();
        for (SanPham1 sanPham : listSanPham) {
            model.addRow(new Object[]{
                sanPham.getMaSP(),
                sanPham.getTenSP(),
                sanPham.getNgayNhap(),
                sanPham.getNgayCapNhat(),
                sanPham.isTrangThai() == true ? "Còn Hàng" : "Hết Hàng",
                sanPham.getMaDM()
            });
        }
    }

    private void loadDataToComboDanhMuc() {
        modelComboDanhMuc.removeAllElements();
        ArrayList<DanhMuc1> listDanhMuc = danhMucService.getAllDanhMuc();
        for (DanhMuc1 dm : listDanhMuc) {
            if (dm.isTrangThai() == true) {
                modelComboDanhMuc.addElement(dm);
            }
        }
    }

    private void clearForm() {
        txtMaSP.setText("");
        txtTenSP.setText("");
        txtNgayNhap.setText("");
        txtNgayCapNhat.setText("");
        rdoConHang.setSelected(true);
        cboDanhMuc.setSelectedIndex(0);
        tblSanPham.clearSelection();
        index = -1;
    }

    private SanPham1 sanPhamAddNew() {
        SanPham1 sanPham = new SanPham1();
        sanPham.setTenSP(txtTenSP.getText());
        sanPham.setNgayNhap(LocalDate.now());
        sanPham.setNgayCapNhat(LocalDate.now());
        if (rdoConHang.isSelected()) {
            sanPham.setTrangThai(true);
        }
        if (rdoHetHang.isSelected()) {
            sanPham.setTrangThai(false);
        }
        sanPham.setMaDM((DanhMuc1) cboDanhMuc.getSelectedItem());
        System.out.println(sanPham.getMaSP());
        System.out.println(sanPham.getMaDM().getMaDM());
        return sanPham;
    }

    private void loadCTSPToTable() {
        model.setRowCount(0);
        ArrayList<ChiTietSanPham1> listCTSP = chiTietSPService.getAllCTSP();
        for (ChiTietSanPham1 ctsp : listCTSP) {
            model.addRow(new Object[]{
                ctsp.getMaCTSP(),
                ctsp.getSoLuong(),
                ctsp.getDonGia(),
                ctsp.getMaSP(),
                ctsp.getMaCLDe(),
                ctsp.getMaSize(),
                ctsp.getMaMS(),
                ctsp.getMaCL(),
                ctsp.getMoTa(),
                ctsp.getMaGG()
            });
        }
    }

    private void loadDataToComboSanPham() {
        modelComboSanPham.removeAllElements();
        ArrayList<SanPham1> listSanPham = sanPhamService.getAllSanPham();
        for (SanPham1 sp : listSanPham) {
            if (sp.isTrangThai() == true) {
                modelComboSanPham.addElement(sp);
            }
        }
    }

    private void loadDataToComboCLMG() {
        modelComboChatLieuMG.removeAllElements();
        ArrayList<ChatLieuMatGiay1> listCLMG = chatLieuMGService.getAllChatLieuMG();
        for (ChatLieuMatGiay1 clmg : listCLMG) {
            if (clmg.isTrangThai() == true) {
                modelComboChatLieuMG.addElement(clmg);

            }
        }
    }

    private void loadDataToComboCLDG() {
        modelComboChatLieuDG.removeAllElements();
        ArrayList<ChatLieuDeGiay1> listCLDG = chatLieuDGService.getAllChatLieDG();
        for (ChatLieuDeGiay1 cldg : listCLDG) {
            if (cldg.isTrangThai() == true) {
                modelComboChatLieuDG.addElement(cldg);

            }
        }
    }

    private void loadDataToComboSize() {
        modelComboSize.removeAllElements();
        ArrayList<Size1> listSize = sizeService.getAllSize();
        for (Size1 size : listSize) {
            if (size.isTrangThai() == true) {
                modelComboSize.addElement(size);

            }
        }
    }

    private void loadDataToComboMauSac() {
        modelComboMauSac.removeAllElements();
        ArrayList<MauSac1> listMauSac = mauSacService.getAllMauSac();
        for (MauSac1 mauSac : listMauSac) {
            if (mauSac.isTrangThai() == true) {
                modelComboMauSac.addElement(mauSac);
            }
        }
    }

    private void loadDataToComboGiamGia() {
        modelComboGiamGia.removeAllElements();
        GiamGia1 gg = new GiamGia1("Không có");
        modelComboGiamGia.addElement(gg);
        ArrayList<GiamGia1> listGiamGia = giamGiaService.getAllGiamGia();
        for (GiamGia1 giamGia : listGiamGia) {
            modelComboGiamGia.addElement(giamGia);
        }
    }

    private void showDetail() {
        txtMaSP.setText(model.getValueAt(index, 0).toString());
        txtTenSP.setText(model.getValueAt(index, 1).toString());
        txtNgayNhap.setText(model.getValueAt(index, 2).toString());
        txtNgayCapNhat.setText(model.getValueAt(index, 3).toString());
        if (model.getValueAt(index, 4) == "Còn Hàng") {
            rdoConHang.setSelected(true);
        }
        if (model.getValueAt(index, 4) == "Hết Hàng") {
            rdoHetHang.setSelected(true);
        }
        DanhMuc1 danhMuc = (DanhMuc1) tblSanPham.getValueAt(index, 5);
        modelComboDanhMuc.setSelectedItem(danhMuc);
        tblSanPham.setRowSelectionInterval(index, index);
    }

    private void showDetailCTSP() {
        txtMaCTSP.setText(model.getValueAt(index, 0).toString());
        txtSoLuong.setText(model.getValueAt(index, 1).toString());
        txtDonGia.setText(model.getValueAt(index, 2).toString());
        SanPham1 sp = (SanPham1) tblCTSP.getValueAt(index, 3);
        modelComboSanPham.setSelectedItem(sp);
        ChatLieuDeGiay1 cldg = (ChatLieuDeGiay1) tblCTSP.getValueAt(index, 4);
        modelComboChatLieuDG.setSelectedItem(cldg);
        Size1 size = (Size1) tblCTSP.getValueAt(index, 5);
        modelComboSize.setSelectedItem(size);
        MauSac1 ms = (MauSac1) tblCTSP.getValueAt(index, 6);
        modelComboMauSac.setSelectedItem(ms);
        ChatLieuMatGiay1 clmg = (ChatLieuMatGiay1) tblCTSP.getValueAt(index, 7);
        modelComboChatLieuMG.setSelectedItem(clmg);
        txtMoTa.setText(tblCTSP.getValueAt(index, 8).toString());
        GiamGia1 gg = (GiamGia1) model.getValueAt(index, 9);
        modelComboGiamGia.setSelectedItem(gg);
        tblCTSP.setRowSelectionInterval(index, index);
        System.out.println(cboGiamGia.getSelectedIndex());
    }

    private void clearFormCTSP() {
        txtMaCTSP.setText("");
        txtSoLuong.setText("");
        txtDonGia.setText("");
        cboSanPham.setSelectedIndex(0);
        cboChatLieuDG.setSelectedIndex(0);
        cboSize.setSelectedIndex(0);
        cboMauSac.setSelectedIndex(0);
        cboChatLieuMG.setSelectedIndex(0);
        txtMoTa.setText("");
        cboGiamGia.setSelectedIndex(0);
        tblCTSP.clearSelection();
        index = -1;
    }

    private ChiTietSanPham1 ChiTietSPAddNew() {
        ChiTietSanPham1 ctsp = new ChiTietSanPham1();
        ctsp.setSoLuong(Integer.parseInt(txtSoLuong.getText()));
        ctsp.setDonGia(Float.parseFloat(txtDonGia.getText()));
        ctsp.setMaSP((SanPham1) cboSanPham.getSelectedItem());
        ctsp.setMaCLDe((ChatLieuDeGiay1) cboChatLieuDG.getSelectedItem());
        ctsp.setMaSize((Size1) cboSize.getSelectedItem());
        ctsp.setMaMS((MauSac1) cboMauSac.getSelectedItem());
        ctsp.setMaCL((ChatLieuMatGiay1) cboChatLieuMG.getSelectedItem());
        ctsp.setMoTa(txtMoTa.getText());
        ctsp.setMaGG((GiamGia1) cboGiamGia.getSelectedItem());
        System.out.println(ctsp.getMaSP().getMaSP());
        System.out.println(ctsp.getMaCL().getMaCL());
        return ctsp;
    }

    private ChiTietSanPham1 CTSPUpdate() {
        ChiTietSanPham1 ctsp = new ChiTietSanPham1();
        ctsp.setMaCTSP(Integer.parseInt(txtMaCTSP.getText()));
        ctsp.setSoLuong(Integer.parseInt(txtSoLuong.getText()));
        ctsp.setDonGia(Float.parseFloat(txtDonGia.getText()));
        ctsp.setMaSP((SanPham1) modelComboSanPham.getSelectedItem());
        ctsp.setMaCLDe((ChatLieuDeGiay1) modelComboChatLieuDG.getSelectedItem());
        ctsp.setMaSize((Size1) modelComboSize.getSelectedItem());
        ctsp.setMaMS((MauSac1) modelComboMauSac.getSelectedItem());
        ctsp.setMaCL((ChatLieuMatGiay1) modelComboChatLieuMG.getSelectedItem());
        ctsp.setMoTa(txtMoTa.getText());
        ctsp.setMaGG((GiamGia1) modelComboGiamGia.getSelectedItem());
        System.out.println(ctsp.getMaSP().getMaSP());
        return ctsp;
    }

    private ChiTietSanPham1 ChiTietSPUpdate() {
        ChiTietSanPham1 ctsp = new ChiTietSanPham1();
        ctsp.setMaCTSP(Integer.parseInt(txtMaCTSP.getText()));
        ctsp.setSoLuong(Integer.parseInt(txtSoLuong.getText()));
        ctsp.setDonGia(Float.parseFloat(txtDonGia.getText()));
        ctsp.setMaSP((SanPham1) cboSanPham.getSelectedItem());
        ctsp.setMaCLDe((ChatLieuDeGiay1) cboChatLieuDG.getSelectedItem());
        ctsp.setMaSize((Size1) cboSize.getSelectedItem());
        ctsp.setMaMS((MauSac1) cboMauSac.getSelectedItem());
        ctsp.setMaCL((ChatLieuMatGiay1) cboChatLieuMG.getSelectedItem());
        ctsp.setMoTa(txtMoTa.getText());
        ctsp.setMaGG((GiamGia1) cboGiamGia.getSelectedItem());
        return ctsp;
    }

    private void loadDanhMucToTable() {
        ArrayList<DanhMuc1> listDanhMuc = danhMucService.getAllDanhMuc();
        model.setRowCount(0);
        for (DanhMuc1 danhMuc : listDanhMuc) {
            model.addRow(new Object[]{
                danhMuc.getMaDM(),
                danhMuc.getTenDanhMuc(),
                danhMuc.isTrangThai() == true ? "Đang Kinh Doanh" : "Ngừng Kinh Doanh"
            });
        }
    }

    private SanPham1 getSanPhamFromInput() {
        SanPham1 sanPham = new SanPham1();
        sanPham.setMaSP(Integer.parseInt(txtMaSP.getText()));
        sanPham.setTenSP(txtTenSP.getText());
        sanPham.setNgayCapNhat(LocalDate.now());
        if (rdoConHang.isSelected()) {
            sanPham.setTrangThai(true);
        }
        if (rdoHetHang.isSelected()) {
            sanPham.setTrangThai(false);
        }
        sanPham.setMaDM((DanhMuc1) cboDanhMuc.getSelectedItem());
        System.out.println(sanPham.getMaSP());
        System.out.println(sanPham.getMaDM().getMaDM());
        return sanPham;
    }

    private void loadChatLieuDeToTable() {
        ArrayList<ChatLieuDeGiay1> listCLDeGiay = chatLieuDGService.getAllChatLieDG();
        model.setRowCount(0);
        for (ChatLieuDeGiay1 cldg : listCLDeGiay) {
            model.addRow(new Object[]{
                cldg.getMaCLDe(),
                cldg.getTenChatLieuDe(),
                cldg.isTrangThai() == true ? "Đang Kinh Doanh" : "Ngừng Kinh Doanh"
            });
        }
    }

    private void loadChatLieuMatToTable() {
        ArrayList<ChatLieuMatGiay1> listChatLieuMG = chatLieuMGService.getAllChatLieuMG();
        model.setRowCount(0);
        for (ChatLieuMatGiay1 chatLieuMG : listChatLieuMG) {
            model.addRow(new Object[]{
                chatLieuMG.getMaCL(),
                chatLieuMG.getTenChatLieu(),
                chatLieuMG.isTrangThai() == true ? "Đang Kinh Doanh" : "Ngừng Kinh Doanh"
            });
        }
    }

    private void showDetailThuocTinh() {
        txtMaThuocTinh.setText(model.getValueAt(index, 0).toString());
        txtTenThuocTinh.setText(model.getValueAt(index, 1).toString());
        if (model.getValueAt(index, 2) == "Đang Kinh Doanh") {
            rdoDangKinhDoanh.setSelected(true);
        }
        if (model.getValueAt(index, 2) == "Ngừng Kinh Doanh") {
            rdoNgungKinhDoanh.setSelected(true);
        }
        tblThuocTinh.setRowSelectionInterval(index, index);
    }

    private ChatLieuMatGiay1 clmgAddNew() {
        ChatLieuMatGiay1 clmg = new ChatLieuMatGiay1();
        clmg.setTenChatLieu(txtTenThuocTinh.getText());
        if (rdoDangKinhDoanh.isSelected()) {
            clmg.setTrangThai(true);
        }
        if (rdoNgungKinhDoanh.isSelected()) {
            clmg.setTrangThai(false);
        }
        return clmg;
    }

    private ChatLieuDeGiay1 cldgAddNew() {
        ChatLieuDeGiay1 cldg = new ChatLieuDeGiay1();
        cldg.setTenChatLieuDe(txtTenThuocTinh.getText());
        if (rdoDangKinhDoanh.isSelected()) {
            cldg.setTrangThai(true);
        }
        if (rdoNgungKinhDoanh.isSelected()) {
            cldg.setTrangThai(false);
        }
        return cldg;
    }

    private void clearFormTTSP() {
        txtMaThuocTinh.setText("");
        txtTenThuocTinh.setText("");
        rdoDangKinhDoanh.setSelected(true);
        tblThuocTinh.clearSelection();
        index = -1;
    }

    private ChatLieuMatGiay1 clmgUpdate() {
        ChatLieuMatGiay1 clmg = new ChatLieuMatGiay1();
        clmg.setMaCL(Integer.parseInt(txtMaThuocTinh.getText()));
        clmg.setTenChatLieu(txtTenThuocTinh.getText());
        if (rdoDangKinhDoanh.isSelected()) {
            clmg.setTrangThai(true);
        }
        if (rdoNgungKinhDoanh.isSelected()) {
            clmg.setTrangThai(false);
        }
        return clmg;
    }

    private ChatLieuDeGiay1 cldgUpdate() {
        ChatLieuDeGiay1 cldg = new ChatLieuDeGiay1();
        cldg.setMaCLDe(Integer.parseInt(txtMaThuocTinh.getText()));
        cldg.setTenChatLieuDe(txtTenThuocTinh.getText());
        if (rdoDangKinhDoanh.isSelected()) {
            cldg.setTrangThai(true);
        }
        if (rdoNgungKinhDoanh.isSelected()) {
            cldg.setTrangThai(false);
        }
        return cldg;
    }

    private void loadMauSacToTable() {
        ArrayList<MauSac1> listMauSac = mauSacService.getAllMauSac();
        model.setRowCount(0);
        for (MauSac1 mauSac : listMauSac) {
            model.addRow(new Object[]{
                mauSac.getMaMS(),
                mauSac.getTenMau(),
                mauSac.isTrangThai() == true ? "Đang Kinh Doanh" : "Ngừng Kinh Doanh"
            });
        }
    }

    private void loadSizeToTable() {
        ArrayList<Size1> listSize = sizeService.getAllSize();
        model.setRowCount(0);
        for (Size1 size : listSize) {
            model.addRow(new Object[]{
                size.getMaSize(),
                size.getKichThuoc(),
                size.isTrangThai() == true ? "Đang Kinh Doanh" : "Ngừng Kinh Doanh"
            });
        }
    }

    private DanhMuc1 danhMucAddNew() {
        DanhMuc1 danhMuc = new DanhMuc1();
        danhMuc.setTenDanhMuc(txtTenThuocTinh.getText());
        if (rdoDangKinhDoanh.isSelected()) {
            danhMuc.setTrangThai(true);
        }
        if (rdoNgungKinhDoanh.isSelected()) {
            danhMuc.setTrangThai(false);
        }
        return danhMuc;
    }

    private MauSac1 mauSacAddNew() {
        MauSac1 mauSac = new MauSac1();
        mauSac.setTenMau(txtTenThuocTinh.getText());
        if (rdoDangKinhDoanh.isSelected()) {
            mauSac.setTrangThai(true);
        }
        if (rdoNgungKinhDoanh.isSelected()) {
            mauSac.setTrangThai(false);
        }
        return mauSac;
    }

    private Size1 sizeAddNew() {
        Size1 size = new Size1();
        size.setKichThuoc(Integer.parseInt(txtTenThuocTinh.getText()));
        if (rdoDangKinhDoanh.isSelected()) {
            size.setTrangThai(true);
        }
        if (rdoNgungKinhDoanh.isSelected()) {
            size.setTrangThai(false);
        }
        return size;
    }

    private DanhMuc1 danhMucUpdate() {
        DanhMuc1 danhMuc = new DanhMuc1();
        danhMuc.setMaDM(Integer.parseInt(txtMaThuocTinh.getText()));
        danhMuc.setTenDanhMuc(txtTenThuocTinh.getText());
        if (rdoDangKinhDoanh.isSelected()) {
            danhMuc.setTrangThai(true);
        }
        if (rdoNgungKinhDoanh.isSelected()) {
            danhMuc.setTrangThai(false);
        }
        return danhMuc;
    }

    private MauSac1 mauSacUpdate() {
        MauSac1 mauSac = new MauSac1();
        mauSac.setMaMS(Integer.parseInt(txtMaThuocTinh.getText()));
        mauSac.setTenMau(txtTenThuocTinh.getText());
        if (rdoDangKinhDoanh.isSelected()) {
            mauSac.setTrangThai(true);
        }
        if (rdoNgungKinhDoanh.isSelected()) {
            mauSac.setTrangThai(false);
        }
        return mauSac;
    }

    private Size1 sizeUpdate() {
        Size1 size = new Size1();
        size.setMaSize(Integer.parseInt(txtMaThuocTinh.getText()));
        size.setKichThuoc(Integer.parseInt(txtTenThuocTinh.getText()));
        if (rdoDangKinhDoanh.isSelected()) {
            size.setTrangThai(true);
        }
        if (rdoNgungKinhDoanh.isSelected()) {
            size.setTrangThai(false);
        }
        return size;
    }

    private ChiTietSanPham1 ChiTietSPAddNewMaGGNull() {
        ChiTietSanPham1 ctsp = new ChiTietSanPham1();
        ctsp.setSoLuong(Integer.parseInt(txtSoLuong.getText()));
        ctsp.setDonGia(Float.parseFloat(txtDonGia.getText()));
        ctsp.setMaSP((SanPham1) cboSanPham.getSelectedItem());
        ctsp.setMaCLDe((ChatLieuDeGiay1) cboChatLieuDG.getSelectedItem());
        ctsp.setMaSize((Size1) cboSize.getSelectedItem());
        ctsp.setMaMS((MauSac1) cboMauSac.getSelectedItem());
        ctsp.setMaCL((ChatLieuMatGiay1) cboChatLieuMG.getSelectedItem());
        ctsp.setMoTa(txtMoTa.getText());
        return ctsp;
    }

    private ChiTietSanPham1 ChiTietSPUpdateMaGGNull() {
        ChiTietSanPham1 ctsp = new ChiTietSanPham1();
        ctsp.setMaCTSP(Integer.parseInt(txtMaCTSP.getText()));
        ctsp.setSoLuong(Integer.parseInt(txtSoLuong.getText()));
        ctsp.setDonGia(Float.parseFloat(txtDonGia.getText()));
        ctsp.setMaSP((SanPham1) cboSanPham.getSelectedItem());
        ctsp.setMaCLDe((ChatLieuDeGiay1) cboChatLieuDG.getSelectedItem());
        ctsp.setMaSize((Size1) cboSize.getSelectedItem());
        ctsp.setMaMS((MauSac1) cboMauSac.getSelectedItem());
        ctsp.setMaCL((ChatLieuMatGiay1) cboChatLieuMG.getSelectedItem());
        ctsp.setMoTa(txtMoTa.getText());
        return ctsp;
    }

    private void loadCtspByMaSP() {
        model.setRowCount(0);
        ArrayList<ChiTietSanPham1> listSP = chiTietSPService.getSPByMa((int) tblSanPham.getValueAt(index, 0));
        System.out.println("a");
        for (ChiTietSanPham1 ctsp : listSP) {
            model.addRow(new Object[]{
                ctsp.getMaCTSP(),
                ctsp.getSoLuong(),
                ctsp.getDonGia(),
                ctsp.getMaSP(),
                ctsp.getMaCLDe(),
                ctsp.getMaSize(),
                ctsp.getMaMS(),
                ctsp.getMaCL(),
                ctsp.getMoTa(),
                ctsp.getMaGG()
            });
        }
    }

    void xuatFile() {
        JFileChooser chooser = new JFileChooser();
        chooser.setCurrentDirectory(new File(System.getProperty("user.home")));
        int result = chooser.showSaveDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            File file = chooser.getSelectedFile();
            try {
                XSSFWorkbook workbook = new XSSFWorkbook();
                XSSFSheet sheet = workbook.createSheet("SanPham");
                TableModel model = tblSanPham.getModel();

                //header
                XSSFRow header = sheet.createRow(0);
                for (int j = 0; j < model.getColumnCount(); j++) {
                    header.createCell(j).setCellValue(model.getColumnName(j));
                }

                //data
                for (int i = 0; i < model.getRowCount(); i++) {
                    XSSFRow dataRow = sheet.createRow(i + 1);
                    for (int j = 0; j < model.getColumnCount(); j++) {
                        Object cellValue = model.getValueAt(i, j);
                        if (cellValue != null) {
                            dataRow.createCell(j).setCellValue(cellValue.toString());
                        }
                    }
                }

                try (FileOutputStream outputStream = new FileOutputStream(file.getAbsolutePath() + ".xlsx")) {
                    workbook.write(outputStream);
                    JOptionPane.showMessageDialog(this, "In thành công!");
                }
            } catch (FileNotFoundException ex) {
                ex.printStackTrace();
                JOptionPane.showMessageDialog(this, "File not found!");
            } catch (IOException ex) {
                ex.printStackTrace();
                JOptionPane.showMessageDialog(this, "Error writing to the file!");
            }
        }
    }
}
